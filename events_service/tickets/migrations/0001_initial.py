# Generated by Django 3.1.1 on 2020-10-25 13:04

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Date',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('date', models.DateTimeField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=255)),
                ('type', models.CharField(blank=True, max_length=20)),
                ('promoter', models.CharField(blank=True, max_length=255)),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=20), size=None)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Seat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('number', models.PositiveIntegerField()),
                ('row', models.PositiveIntegerField()),
                ('gate', models.CharField(max_length=20)),
                ('state', models.CharField(choices=[('GOOD', 'Good'), ('WEARY', 'Weary'), ('BROKEN', 'Broken')], default='GOOD', max_length=20)),
                ('section', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=255)),
                ('capacity', models.PositiveIntegerField()),
                ('events', models.ManyToManyField(related_name='venues', through='tickets.Date', to='tickets.Event')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TicketType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=20)),
                ('slug', models.SlugField(allow_unicode=True, blank=True, null=True)),
                ('quantity', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=11)),
                ('date', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_types', to='tickets.date')),
            ],
            options={
                'unique_together': {('date', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('RESERVED', 'Reserved'), ('BOOKED', 'Booked')], default='AVAILABLE', max_length=20)),
                ('seat', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='tickets.seat')),
                ('tickettype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickettype_seats', to='tickets.tickettype')),
            ],
            options={
                'unique_together': {('seat', 'tickettype')},
            },
        ),
        migrations.AddField(
            model_name='seat',
            name='venue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='venue_seats', to='tickets.venue'),
        ),
        migrations.AddField(
            model_name='date',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tickets.event'),
        ),
        migrations.AddField(
            model_name='date',
            name='venue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tickets.venue'),
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('TIMEDOUT', 'Timedout'), ('CONFIRMED', 'Confirmed'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20)),
                ('ticket', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='tickets.ticket')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterUniqueTogether(
            name='seat',
            unique_together={('number', 'row', 'section')},
        ),
    ]
